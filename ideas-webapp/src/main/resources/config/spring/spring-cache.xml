<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/cache
    http://www.springframework.org/schema/cache/spring-cache.xsd">

    <!-- 启用缓存注解功能，这个是必须的，否则注解不会生效,redis的实现是 redisCacheManager -->
    <cache:annotation-driven cache-manager="cacheManager"/>

    <!--<context:property-placeholder location="classpath:com/convenient/config/wechat/redis.properties"-->
                                  <!--ignore-unresolvable="true"/>-->

    <!-- spring自己的换管理器，这里定义了两个缓存位置名称 ，既注解中的value -->
    <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
        <property name="caches">
            <set>
                <!--<bean class="com.convenient.czs.cache.RedisCache">-->
                    <!--<property name="redisTemplate" ref="redisTemplate"/>-->
                    <!--<property name="name" value="default"/>-->
                <!--</bean>-->
                <!--<bean class="com.convenient.czs.cache.RedisCache">-->
                    <!--<property name="redisTemplate" ref="redisTemplate"/>-->
                    <!--<property name="name" value="userLocation"/>-->
                <!--</bean>-->
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean">
                    <property name="name" value="myIdeas"/>
                </bean>
            </set>
        </property>
    </bean>

    <!--<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">-->
        <!--<property name="connectionFactory" ref="jedisConnectionFactory"/>-->
    <!--</bean>-->

    <!--<bean id="jedisConnectionFactory"-->
          <!--class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">-->
        <!--<property name="hostName" value="${redis.host}"/>-->
        <!--<property name="port" value="${redis.port}"/>-->
        <!--<property name="poolConfig" ref="jedisPoolConfig"/>-->
    <!--</bean>-->

    <!--<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">-->
        <!--<property name="maxTotal" value="${redis.pool.maxTotal}"/>-->
        <!--<property name="maxIdle" value="${redis.pool.maxIdle}"/>-->
        <!--<property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}"/>-->
        <!--<property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>-->
    <!--</bean>-->
</beans>